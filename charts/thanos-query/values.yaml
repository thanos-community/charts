# Default values for thanos-query.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/thanos/thanos
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Labels to add to the service account
  labels: {}
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Add initContainers to deployment
# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
initContainers: |

# -- Add extra containers to deployment
# ref: https://kubernetes.io/docs/concepts/workloads/pods/
extraContainers: |

# -- Add extra labels to deployment
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
deploymentLabels: {}
  # extraLabel: value

# -- Add extra annotations to deployment
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
deploymentAnnotations: {}
  # extraAnnotation: value

# -- Add extra labels to pod template
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}
  # extraLabel: value

# -- Add extra annotations to pod template
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
  # extraAnnotation: value

# -- Kubernetes Security Context (pod)
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 2000

# -- Kubernetes Security Context (container)
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Resource requests and limits
# ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Kubernetes deployment strategy object
# ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
strategy: {}

# -- Horizontal Pod Autoscaler configuration
# ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
# ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# -- Tolerations for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Affinity for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
#  podAntiAffinity:
#    preferredDuringSchedulingIgnoredDuringExecution:
#    - podAffinityTerm:
#        labelSelector:
#          matchExpression:
#          - key: app.kubernetes.io/name
#            operator: In
#            values:
#            - thanos-query
#        namespaces:
#        - thanos
#        topologyKey: kubernetes.io/hostname
#      weight: 100


# -- Add extra environment variables
extraEnv: []
# - name: ENV
#   value: value

# Command flags
# ref: https://thanos.io/tip/components/query/#flags

# -- Log filtering level
logLevel: info

# -- Log format to use. Possible options: logfmt or json
logFormat: logfmt

# -- Alternative to 'tracing.config-file' flag (lower priority). Content of YAML file
# with tracing configuration. See format details: https://thanos.io/tip/thanos/tracing.md
tracingConfig: {}
#  type: STACKDRIVER
#  config:
#    service_name: ""
#    project_id: ""
#    sample_factor: 0

# -- Labels to treat as a replica indicator along which data is deduplicated.
# Still you will be able to query without deduplication using 'dedup=false' parameter.
replicaLabels: []
  # - replica
  # - prometheus_replica

# -- Query selector labels that will be exposed in info endpoint
selectorLabels: []
  # - example

# -- Addresses of statically configured store API servers (repeatable). The scheme may be
# prefixed with 'dns+' or 'dnssrv+' to detect store API servers through respective DNS
# lookups.
stores: []
# - "dnssrv+_grpc._tcp.example-thanos-store.thanos.svc.cluster.local"

# -- Enable automatic adjustment (step / 5) to what source of data should be used in store
# gateways if no max_source_resolution param is specified.
autoDownsampling: true

# -- Enable partial response for queries if no partial_response param is specified.
# Setting to `false` will set "--no-query.partial-response".
partialResponse: true

# -- Add extra arguments
extraArgs: []
# - "--extraargs=extravalue"

service:
  port:
    http: 9090
    grpc: 10901
    
  # -- Add extra labels to service
  labels: {}
    # extraLabel: value
    
  # -- Add annotations to service
  annotations: {}
    # extraAnnotation: value
  type: ClusterIP
  headless: false
  
  # -- Add labels for service selector
  matchLabels: {}

httpIngress:
  # -- Enable ingress for http endpoint
  enabled: false
  
  # -- Add extra labels to http ingress
  labels: {}
    # extraLabel: value
    
  # -- Add annotations to http ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # - host: chart-example.local
    #  paths:
    #    - "/"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

grpcIngress:
  # -- Enable ingress for grpc endpoint
  enabled: false
  # -- Add extra labels to grpc ingress
  labels: {}
    # extraLabel: value
    
  # -- Add annotations to grpc ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # - host: chart-example.local
    #  paths:
    #    - "/"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Prometheus Operator's ServiceMonitor configuration
serviceMonitor:
  enabled: false
  relabelings:
  - separator: /
    sourceLabels:
    - namespace
    - pod
    targetLabel: instance
